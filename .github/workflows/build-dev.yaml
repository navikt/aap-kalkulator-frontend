name: "Build and deploy aap-kalkulator to dev"
on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APP: aap-kalkulator-frontend
  IMAGE_BASE: europe-north1-docker.pkg.dev/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/aap/${{ github.event.repository.name }}
jobs:
  build:
    name: Bygg og publiser Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com
          cache: yarn

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}

      - name: install dependencies Yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: test application
        run: yarn test

      - name: hent tidsstempel
        run: echo "NEXT_PUBLIC_LAST_UPDATED=$(date +%m-%d-%Y)" > .env.local

      - name: Bygg klient(yarn run build)
        run: yarn run build

      - name: Upload static files to NAV CDN dev
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: aap
          source: ./.next/static
          destination: /aap-kalkulator-frontend/_next

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setter tag-navn
        run: echo "TAG=$(date +%m-%d-%Y)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Setter image-navn
        id: image
        run: |
          echo "IMAGE=$(echo $IMAGE_BASE)-$(echo $TAG)" >> $GITHUB_ENV
          echo "image=$(echo $IMAGE_BASE)-$(echo $TAG)" >> $GITHUB_OUTPUT

      - name: Login GAR
        uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: aap

      - name: Build and push Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    strategy:
      matrix:
        cluster: [ dev-gcp ]
    name: Deploy til ${{matrix.cluster}}
    needs: [build]
    runs-on: ubuntu-latest
    env:
      PRINT_PAYLOAD: true
      APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
      RESOURCE: nais.yaml
      CLUSTER: ${{matrix.cluster}}
      VARS: .nais/${{matrix.cluster}}.yaml
      IMAGE: ${{needs.build.outputs.image}}
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@master


