name: Push
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.md'
env:
    APP: aap-kalkulator-frontend
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    IMAGE_BASE: ghcr.io/${{ github.repository }}
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "test=world" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}  
      
  build-and-publish:
        name: Bygg og push Docker image
        runs-on: ubuntu-latest
        outputs:
          img: ${{ steps.bygg.outputs.img }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              
            - name: Install npm dependencies
              run: npm ci
              
            - name: test application
              run: npm test
              
            - name: hent tidsstempel
              run: echo "NEXT_PUBLIC_LAST_UPDATED=$(date +%Y.%m.%d.%H%M%S)" > .env.local
              
            - name: Setter tag-navn
              run: echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
              
            - name: Setter image-navn
              run: echo "IMAGE=$(echo $IMAGE_BASE):$(echo $TAG)" >> $GITHUB_ENV
              
            - name: Build application
              id: bygg
              run: | 
                echo "img=${{ env.IMAGE }}" >> $GITHUB_OUTPUT
                npm run build
                
            - name: Get image
              run: echo "The image is ${{ steps.bygg.outputs.img }}"      
                
            - name: Docker login
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
                  
            - name: Bygg og push Docker image
              run: |
                  docker build . -t ${IMAGE}
                  docker push ${IMAGE}
   
  deploy:
        strategy:
          matrix:
            cluster: [ dev-gcp, prod-gcp ]
        environment: ${{matrix.cluster}}:aap
        name: Deploy til ${{matrix.cluster}}
        needs: build-and-publish
        runs-on: ubuntu-latest
        env:
          PRINT_PAYLOAD: true
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: ${{matrix.cluster}}
          VARS: .nais/${{matrix.cluster}}.yaml
          IMAGE: ${{needs.bygg.outputs.img}} 
        steps:
          - name: Get image
            run: echo "The image is ${{ needs.bygg.outputs.img }}"  
          - uses: actions/checkout@v3
          - uses: nais/deploy/actions/deploy@master
           

