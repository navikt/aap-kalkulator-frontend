name: Push
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.md'
env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    APP: aap-kalkulator-frontend
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    IMAGE_BASE: ghcr.io/${{ github.repository }}
jobs:        
  build-and-publish:
        name: Bygg og publiser Docker image
        runs-on: ubuntu-latest
        outputs:
          image: ${{ steps.bygg.outputs.image }}
        steps:
            - name: Sjekk ut 
              uses: actions/checkout@v3
              
            - name: Install npm avhengigheter
              run: npm ci
              
            - name: test application
              run: npm test
              
            - name: hent tidsstempel
              run: echo "NEXT_PUBLIC_LAST_UPDATED=$(date +%e.%B.%Y)" > .env.local
              
            - name: Setter tag-navn
              run: echo "TAG=$(date +%e.%B.%Y)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
              
            - name: Setter image-navn
              run: echo "IMAGE=$(echo $IMAGE_BASE):$(echo $TAG)" >> $GITHUB_ENV
              
            - name: Bygg applikasjon
              id: bygg
              run: | 
                echo "image=${{ env.IMAGE }}" >> $GITHUB_OUTPUT
                npm run build
                    
            - name: Docker login
              run:  echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
                  
            - name: Bygg og publiser docker image
              run: |
                  docker build . -t ${IMAGE}
                  docker push ${IMAGE}
   
  deploy:
        strategy:
          matrix:
            cluster: [ dev-gcp, prod-gcp ]
        name: Deploy til ${{matrix.cluster}}
        needs: build-and-publish
        runs-on: ubuntu-latest
        env:
          PRINT_PAYLOAD: true
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: nais.yaml
          CLUSTER: ${{matrix.cluster}}
          VARS: .nais/${{matrix.cluster}}.yaml
        steps:
          - run: echo "IMAGE=$(echo ${{needs.build-and-publish.outputs.image}})" >> $GITHUB_ENV
          - uses: actions/checkout@v3
          - uses: nais/deploy/actions/deploy@master
           

