name: Push
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.md'
env:
    APP: aap-kalkulator-frontend
    branchname: ${{ github.ref_name }}
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    IMAGE_BASE: ghcr.io/${{ github.repository }}
jobs:
    build-and-publish:
        outputs:
          image: ${{ steps.bygg.outputs.image }}
        name: Bygg og push Docker image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Install npm dependencies
              run: npm ci
            - name: test application
              run: npm test
            - name: hent tidsstempel
              run: echo "NEXT_PUBLIC_LAST_UPDATED=$(date +%Y.%m.%d.%H%M%S)" > .env.local
            - name: Setter tag-navn
              run: echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
            - name: Setter image-navn
              run: echo "IMAGE=$(echo $IMAGE_BASE):$(echo $TAG)" >> $GITHUB_ENV
            - name: Build application
              id: bygg
              run: | 
                npm run build
                echo "::set-output name=image::${{ env.IMAGE }}"
            - name: Docker login
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
            - name: Bygg og push Docker image
              run: |
                  docker build . -t ${IMAGE}
                  docker push ${IMAGE}
      deploy:
        strategy:
          matrix:
            cluster: [ dev-gcp, prod-gcp ]
          environment: ${{matrix.cluster}}:aap
          name: Deploy til ${{matrix.cluster}}
          needs: build-and-publish
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v1
          - uses: nais/deploy/actions/deploy@v1
            env:
              APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
              RESOURCE: nais.yaml
              CLUSTER: ${{matrix.cluster}}
              VARS: .nais/${{matrix.cluster}}.yaml
              IMAGE: ${{needs.bygg.outputs.image}}

